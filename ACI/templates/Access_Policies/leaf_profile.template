#------------------------------------------
# Create a Leaf Profile and Attach
# Leaf Interface Profile(s)
#------------------------------------------

/*
API Information:
 - Class: "infraLeafS"
 - Distinguished Name: "uni/infra/nprof-{Name}"
GUI Location:
 - Fabric > Access Policies > Switches > Leaf Switches > Profiles > {Name}
*/
resource "aci_leaf_profile" "leaf_profile" {
    for_each   = local.leaf_profile
    annotation = each.value["annotation"]
    # description                   = each.value["description"]
    name                         = each.value["name"]
    name_alias                   = each.value["name_alias"]
    relation_infra_rs_acc_port_p = [each.value["leaf_interface_profile"]]
    leaf_selector {
        name                    = each.value["leaf_selector_name_1"]
        switch_association_type = each.value["switch_association_type_1"]
        node_block {
            name  = each.value["node_block1_name"]
            from_ = each.value["node_block1_from"]
            to_   = each.value["node_block1_to"]
        }
    }
    leaf_selector {
        name                    = each.value["leaf_selector_name_2"]
        switch_association_type = each.value["switch_association_type_2"]
        node_block {
            name  = each.value["node_block2_name"]
            from_ = each.value["node_block2_from"]
            to_   = each.value["node_block2_to"]
        }
    }
}

/*
API Information:
 - Class: "infraLeafS"
 - Distinguished Name: "uni/infra/nprof-{{Name}}/leaves-{{Name}}-typ-range"
GUI Location:
 - Fabric > Access Policies > Switches > Leaf Switches > Profiles > {{Name}}: Leaf Selectors Policy Group: default
*/
resource "aci_rest" "leaf_policy_group_{{Name}}" {
    depends_on  = [aci_leaf_profile.{{Name}}]
    path        = "/api/node/mo/uni/infra/nprof-{{Name}}/leaves-{{Name}}-typ-range.json"
    class_name  = "infraLeafS"
    payload     = <<EOF
{
    "infraLeafS": {
        "attributes": {
            "dn": "uni/infra/nprof-{{Name}}/leaves-{{Name}}-typ-range"
        },
        "children": [
            {
                "infraRsAccNodePGrp": {
                    "attributes": {
                        "tDn": "uni/infra/funcprof/accnodepgrp-default"
                    },
                    "children": []
                }
            }
        ]
    }
}
    EOF
}
