# Use this Resource File to Register {{Name}} with node id {{Node_ID}} to the Fabric
# Requirements are:
# serial: Actual Serial Number of the switch.
# name: Hostname you want to assign.
# node_id: unique ID used to identify the switch in the APIC.
#   in the "Cisco ACI Object Naming and Numbering: Best Practice
#   The recommendation is that the Spines should be 101-199
#   and leafs should start at 200+ thru 4000.  As the number of
#   spines should always be less than the number of leafs
#   https://www.cisco.com/c/en/us/td/docs/switches/datacenter/aci/apic/sw/kb/b-Cisco-ACI-Naming-and-Numbering.html#id_107280
# node_type: remote-leaf-wan or unspecified.
# role: spine, leaf.
# pod_id: Typically this will be 1 unless you are running multipod.

/*
API Information:
 - Class: "fabricNode"
 - Distinguished Name: "topology/pod-{{Pod_ID}}/node-{{Node_ID}}"
GUI Location:
 - Fabric > Access Policies > Inventory > Fabric Membership:[Registered Nodes or Nodes Pending Registration]
*/
resource "aci_fabric_node_member" "{{Name}}" {
    annotation  = each.value["annotation"]
    ext_pool_id = each.value["ext_pool_id"]
    fabric_id   = each.value["fabric_id"]
    name        = each.value["name"]
    name_alias  = each.value["name_alias"]
    node_id     = each.value["node_id"]
    node_type   = each.value["node_type"]
    pod_id      = each.value["pod_id"]
    role        = each.value["role"]
    serial      = each.value["serial"]
}

#------------------------------------------
# Add Nodes Blocks to Maintenance Group(s)
#------------------------------------------

/*
API Information:
 - Class: "fabricNodeBlk"
 - Distinguished Name: "uni/fabric/maintgrp-{Maintenance Group Name}/nodeblk-{Block Name}"
GUI Location:
 - Admin > Firmware > Nodes > {Maintenance Group Name}
*/
resource "aci_rest" "maintenance_node_block" {
  for_each   = local.maintenance_node_block
  path       = "/api/node/mo/${each.value["maintenance_group_dn"]}/nodeblk-blk${each.value["node_id_from"]}-${each.value["node_id_to"]}.json"
  class_name = "fabricNodeBlk"
  payload    = <<EOF
{
    "fabricNodeBlk": {
        "attributes": {
            "dn": "${each.value["maintenance_group_dn"]}/nodeblk-blk${each.value["node_id_from"]}-${each.value["node_id_to"]}",
            "from_": "${each.value["node_id_from"]}",
            "name": "blk${each.value["node_id_from"]}-${each.value["node_id_to"]}",
            "to_": "${each.value["node_id_to"]}",
        }
    }
}
    EOF
}



/*
API Information:
 - Class: "infraAccPortP"
 - Distinguished Name: "uni/infra/accportprof-{{Name}}"
GUI Location:
 - Fabric > Access Policies > Interfaces > Leaf Interfaces > Profiles > {{Name}}
*/
resource "aci_leaf_interface_profile" "{{Name}}" {
    name   = "{{Name}}"
}

/*
API Information:
 - Class: "infraNodeBlk"
 - Distinguished Name: " uni/infra/nprof-{{Name}}/leaves-{{Name}}-typ-range/nodeblk-{{Name}}"
GUI Location:
 - Fabric > Access Policies > Switches > Leaf Switches > Profiles > {{Name}}
*/
resource "aci_leaf_profile" "{{Name}}" {
    annotation = each.value["annotation"]
    # description                   = each.value["description"]
    name                           = "{{Name}}"
    name_alias                   = each.value["name_alias"]
    relation_infra_rs_acc_port_p   = [aci_leaf_interface_profile.{{Name}}.id]
    leaf_selector {
        name                    = "{{Name}}"
        switch_association_type = "range"
        node_block {
            name  = "{{Name}}"
            from_ = "{{Node_ID}}"
            to_   = "{{Node_ID}}"
        }
    }
}

/*
API Information:
 - Class: "infraLeafS"
 - Distinguished Name: "uni/infra/nprof-{{Name}}/leaves-{{Name}}-typ-range"
GUI Location:
 - Fabric > Access Policies > Switches > Leaf Switches > Profiles > {{Name}}: Leaf Selectors Policy Group: default
*/
resource "aci_rest" "leaf_policy_group_{{Name}}" {
    depends_on  = [aci_leaf_profile.{{Name}}]
    path        = "/api/node/mo/uni/infra/nprof-{{Name}}/leaves-{{Name}}-typ-range.json"
    class_name  = "infraLeafS"
    payload     = <<EOF
{
    "infraLeafS": {
        "attributes": {
            "dn": "uni/infra/nprof-{{Name}}/leaves-{{Name}}-typ-range"
        },
        "children": [
            {
                "infraRsAccNodePGrp": {
                    "attributes": {
                        "tDn": "uni/infra/funcprof/accnodepgrp-default"
                    },
                    "children": []
                }
            }
        ]
    }
}
    EOF
}
